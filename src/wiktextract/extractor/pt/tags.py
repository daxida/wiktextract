from .models import WordEntry

# Predefinição:gramática
HEAD_LINE_TAGS = {
    "masculino": "masculine",
    "feminino": "feminine",
    "género comum": "common",
    "dois géneros": "dual",
    "comum aos dois géneros": ["common", "dual"],
    "neutro": "neutral",
    "masculino plural": ["masculine", "plural"],
    "masculino singular": ["masculine", "singular"],
    "masculino de dois números": "masculine",
    "masculino comum aos dois números": ["masculine", "common"],
    "masculino invariável": ["masculine", "invariable"],
    "masculino dual": ["masculine", "dual"],
    "feminino plural": ["feminine", "plural"],
    "feminino singular": ["feminine", "singular"],
    "feminino de dois números": "feminine",
    "feminino comum aos dois números": ["feminine", "common"],
    "feminino invariável": ["feminine", "invariable"],
    "feminino dual": ["feminine", "dual"],
    "género comum e plural": ["common", "plural"],
    "género comum e singular": ["common", "singular"],
    "género comum e comum aos dois números": "common",
    "dois géneros plural": "plural",
    "dois géneros singular": "singular",
    "comum aos dois géneros plural": ["common", "plural"],
    "comum aos dois géneros singular": ["common", "singular"],
    "comum aos dois géneros e aos dois números": "common",
    "neutro plural": ["neutral", "plural"],
    "neutro singular": ["neutral", "singular"],
    "neutro de dois números": "neutral",
    "neutro comum aos dois números": ["neutral", "common"],
    "neutro invariável": ["neutral", "invariable"],
    "neutro dual": ["neutral", "dual"],
    "plural": "plural",
    "singular": "singular",
    "sem plural": "no-plural",
    "singular e plural": ["singular", "plural"],
    # "dois números": "",
    "comum aos dois números": "common",
    "dual": "dual",
    "invariável": "invariable",
    # "uniforme": "",
    # "biforme": "",
    "contável": "countable",
    "incontável": "uncountable",
    "primeira pessoa": "first-person",
    "primeira pessoa do singular": ["first-person", "singular"],
    "primeira pessoa do plural": ["first-person", "plural"],
    "segunda pessoa": "second-person",
    "segunda pessoa do singula": ["second-person", "singular"],
    "segunda pessoa do plural": ["second-person", "plural"],
    "terceira pessoa": "third-person",
    "terceira pessoa do singular": ["third-person", "singular"],
    "terceira pessoa do plural": ["third-person", "plural"],
    "cardinal": "cardinal",
    "ordinal": "ordinal",
    "multiplicativo": "multiplicative",
    # "fracionário": "",
    "distributivo": "distributive",
    "coletivo": "collective",
    "pessoal": "personal",
    "demonstrativo": "demonstrative",
    "possessivo": "possessive",
    "relativo": "relative",
    "interrogativo": "interrogative",
    # "tratamento": "",
    "indefinido": "indefinite",
    "definido": "definite",
    # "próprio": "",
    "comum": "common",
    "concreto": "concrete",
    "abstrato": "abstract",
    "composto": "compound",
    # "simples": "",
    # "primitivo": "",
    # "derivado": "",
    "animado": "animate",
    "inanimado": "inanimate",
    "intransitivo": "intransitive",
    "transitivo": "transitive",
    "transitivo indireto": ["indirect", "transitive"],
    "transitivo direto": ["direct", "transitive"],
    "transitivo direto e indireto": ["direct", "indirect", "transitive"],
    "pronominal": "pronominal",
    "pronominal transitivo indireto": ["pronominal", "indirect", "transitive"],
    "bitransitivo": "ditransitive",
    "reflexivo": "reflexive",
    "auxiliar": "auxiliary",
    "impessoal": "impersonal",
    "predicativo": "predicative",
    "com valor de verbo": "verb",
    "de lugar": "place",
    # "de modo": "",
    # "de tempo": "",
    # "de intensidade": "",
    "maiúscula": "capitalized",
    "minúscula": "lowercase",
}

TAGS = {**HEAD_LINE_TAGS}


def translate_raw_tags(data: WordEntry) -> None:
    raw_tags = []
    for raw_tag in data.raw_tags:
        if raw_tag in TAGS:
            tr_tag = TAGS[raw_tag]
            if isinstance(tr_tag, str):
                data.tags.append(tr_tag)
            elif isinstance(tr_tag, list):
                data.tags.extend(tr_tag)
        else:
            raw_tags.append(raw_tag)
    data.raw_tags = raw_tags
